name: 'Setup Environment'
description: 'A composite action to setup environment with security hardening, checkout, Node.js, and package manager'
inputs:
  pnpm:
    description: 'Whether to use pnpm (true) or npm (false)'
    required: false
    default: 'false'
  install-flags:
    description: 'Additional installation flags'
    required: false
    default: ''
  ref:
    description: 'The ref to checkout'
    required: false
    default: ''
  node-version:
    description: 'Node.js version to setup'
    required: false
    default: 'lts/*'
  use-version-file:
    description: 'Whether to use .nvmrc file for Node.js version'
    required: false
    default: 'false'
  registry-url:
    description: 'Optional registry URL for Node.js setup'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ inputs.ref }}

    - name: Setup Node.js (with version file)
      if: inputs.use-version-file == 'true'
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version-file: '.nvmrc'
        registry-url: ${{ inputs.registry-url }}
        cache: ${{ inputs.pnpm == 'true' && 'pnpm' || 'npm' }}

    - name: Setup Node.js (with specified version)
      if: inputs.use-version-file != 'true'
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.registry-url }}
        cache: ${{ inputs.pnpm == 'true' && 'pnpm' || 'npm' }}

    - name: Setup pnpm
      if: inputs.pnpm == 'true'
      uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

    - name: Install dependencies with pnpm
      if: inputs.pnpm == 'true'
      shell: bash
      run: pnpm install --frozen-lockfile ${{ inputs.install-flags }}

    - name: Install dependencies with npm
      if: inputs.pnpm != 'true'
      shell: bash
      run: npm ci ${{ inputs.install-flags }}